-- Tabla USUARIOS
CREATE TABLE USUARIOS (
    ID_USUARIO INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(255),
    CORREO VARCHAR(255) NOT NULL
);

-- Tabla ADMIN
CREATE TABLE ADMIN (
    ID_ADMIN INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ADMIN VARCHAR(255) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    CONTRASENA VARCHAR(255) NOT NULL
);

-- Tabla TICKETS
CREATE TABLE TICKETS (
    ID_TICKET INT PRIMARY KEY,
    FECHA_HECHO DATE NOT NULL,
    FECHA_CREACION DATE DEFAULT NOT NULL,
    PRIORIDAD VARCHAR(50),
    ESTADO VARCHAR(50) DEFAULT 'Nueva' NOT NULL,
    DESCRIPCION VARCHAR(255) NOT NULL,
    ASUNTO VARCHAR(100) NOT NULL,
    LUGAR VARCHAR(100) NOT NULL,
    PROCESADO BOOLEAN DEFAULT false NOT NULL,
    ID_USUARIO INT,
    ID_ADMIN INT,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO),
    FOREIGN KEY (ID_ADMIN) REFERENCES ADMIN(ID_ADMIN)
);

-- Tabla ARCHIVOS
CREATE TABLE ARCHIVOS (
    ID_ARCHIVO INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE_ARCHIVO VARCHAR(255) NOT NULL,
    TIPO_ARCHIVO VARCHAR(50),
    TAMANO INT,
    ID_TICKET INT,
    FOREIGN KEY (ID_TICKET) REFERENCES TICKETS(ID_TICKET)
);

-- Tabla intermedia para la relaci√≥n N:M entre ADMIN y TICKETS
    CREATE TABLE ADMIN_TICKETS (
        ID_ADTICK INT PRIMARY KEY AUTO_INCREMENT,
        ID_ADMIN INT,
        ID_TICKET INT,
        FOREIGN KEY (ID_ADMIN) REFERENCES ADMIN(ID_ADMIN),
        FOREIGN KEY (ID_TICKET) REFERENCES TICKETS(ID_TICKET)
    );
